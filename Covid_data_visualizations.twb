<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0524.1403                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0524.1403)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Tableau_view_1 (Covid_Portfolio_Project)' inline='true' name='federated.02blw341a03z6v19x6apk1btw7uj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-C3486B5U\SQLEXPRESS04' name='sqlserver.170ansc1uac8ea19p15sm1uos33g'>
            <connection authentication='sspi' class='sqlserver' dbname='Covid_Portfolio_Project' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-C3486B5U\SQLEXPRESS04' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.170ansc1uac8ea19p15sm1uos33g' name='Tableau_view_1' table='[dbo].[Tableau_view_1]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.170ansc1uac8ea19p15sm1uos33g' name='Tableau_view_1' table='[dbo].[Tableau_view_1]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Tableau_view_1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_1_1558AB51BB3F4433B2795E3CD8A2DD99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Tableau_view_1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_1_1558AB51BB3F4433B2795E3CD8A2DD99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Tableau_view_1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_1_1558AB51BB3F4433B2795E3CD8A2DD99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tableau_view_1' datatype='table' name='[__tableau_internal_object_id__].[Tableau_view_1_1558AB51BB3F4433B2795E3CD8A2DD99]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Tableau_view_1' id='Tableau_view_1_1558AB51BB3F4433B2795E3CD8A2DD99'>
            <properties context=''>
              <relation connection='sqlserver.170ansc1uac8ea19p15sm1uos33g' name='Tableau_view_1' table='[dbo].[Tableau_view_1]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tableau_view_2 (Covid_Portfolio_Project)' inline='true' name='federated.0km4tul00gy0q116isydw0kprevg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-C3486B5U\SQLEXPRESS04' name='sqlserver.1efq2f002b766u1b99ewy0kzgpsb'>
            <connection authentication='sspi' class='sqlserver' dbname='Covid_Portfolio_Project' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-C3486B5U\SQLEXPRESS04' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1efq2f002b766u1b99ewy0kzgpsb' name='Tableau_view_2' table='[dbo].[Tableau_view_2]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1efq2f002b766u1b99ewy0kzgpsb' name='Tableau_view_2' table='[dbo].[Tableau_view_2]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Tableau_view_2]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_2_73097CFBE7CA4BC29E97B5231FD8ECC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Tableau_view_2]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_2_73097CFBE7CA4BC29E97B5231FD8ECC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tableau_view_2' datatype='table' name='[__tableau_internal_object_id__].[Tableau_view_2_73097CFBE7CA4BC29E97B5231FD8ECC7]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#32759a'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#3992b0'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#5eafc0'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#8cc9cd'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <filter class='categorical' column='[location]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[location]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[location]' member='&quot;High income&quot;' />
            <groupfilter function='member' level='[location]' member='&quot;Low income&quot;' />
            <groupfilter function='member' level='[location]' member='&quot;Lower middle income&quot;' />
            <groupfilter function='member' level='[location]' member='&quot;Upper middle income&quot;' />
            <groupfilter function='member' level='[location]' member='%null%' />
          </groupfilter>
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Tableau_view_2' id='Tableau_view_2_73097CFBE7CA4BC29E97B5231FD8ECC7'>
            <properties context=''>
              <relation connection='sqlserver.1efq2f002b766u1b99ewy0kzgpsb' name='Tableau_view_2' table='[dbo].[Tableau_view_2]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tableau_view_3 (Covid_Portfolio_Project)' inline='true' name='federated.1e1c62p1rl57j715m8tt012x0kx4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-C3486B5U\SQLEXPRESS04' name='sqlserver.091ms0g02hh90i1bi5elg0a96gon'>
            <connection authentication='sspi' class='sqlserver' dbname='Covid_Portfolio_Project' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-C3486B5U\SQLEXPRESS04' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.091ms0g02hh90i1bi5elg0a96gon' name='Tableau_view_3' table='[dbo].[Tableau_view_3]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.091ms0g02hh90i1bi5elg0a96gon' name='Tableau_view_3' table='[dbo].[Tableau_view_3]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Tableau_view_3]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_3_A59770D2DC1248A082827D055A697219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Tableau_view_3]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_3_A59770D2DC1248A082827D055A697219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>130</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Tableau_view_3]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_3_A59770D2DC1248A082827D055A697219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Tableau_view_3]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_3_A59770D2DC1248A082827D055A697219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='string' name='[HighestInfectionCount]' role='dimension' type='nominal' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tableau_view_3' datatype='table' name='[__tableau_internal_object_id__].[Tableau_view_3_A59770D2DC1248A082827D055A697219]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Tableau_view_3' id='Tableau_view_3_A59770D2DC1248A082827D055A697219'>
            <properties context=''>
              <relation connection='sqlserver.091ms0g02hh90i1bi5elg0a96gon' name='Tableau_view_3' table='[dbo].[Tableau_view_3]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tableau_view_4 (Covid_Portfolio_Project)' inline='true' name='federated.09tb6t50w52c941a6np5e0r2pddf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-C3486B5U\SQLEXPRESS04' name='sqlserver.1xif32f0y4e1ld15regzj18fry20'>
            <connection authentication='sspi' class='sqlserver' dbname='Covid_Portfolio_Project' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-C3486B5U\SQLEXPRESS04' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1xif32f0y4e1ld15regzj18fry20' name='Tableau_view_4' table='[dbo].[Tableau_view_4]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1xif32f0y4e1ld15regzj18fry20' name='Tableau_view_4' table='[dbo].[Tableau_view_4]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Tableau_view_4]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_4_1B358E7844D5439BA0E025B2C1C70EB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Tableau_view_4]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_4_1B358E7844D5439BA0E025B2C1C70EB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Tableau_view_4]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_4_1B358E7844D5439BA0E025B2C1C70EB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>130</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Tableau_view_4]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_4_1B358E7844D5439BA0E025B2C1C70EB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Tableau_view_4]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau_view_4_1B358E7844D5439BA0E025B2C1C70EB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='string' name='[HighestInfectionCount]' role='dimension' type='nominal' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tableau_view_4' datatype='table' name='[__tableau_internal_object_id__].[Tableau_view_4_1B358E7844D5439BA0E025B2C1C70EB5]' role='measure' type='quantitative' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Tableau_view_4' id='Tableau_view_4_1B358E7844D5439BA0E025B2C1C70EB5'>
            <properties context=''>
              <relation connection='sqlserver.1xif32f0y4e1ld15regzj18fry20' name='Tableau_view_4' table='[dbo].[Tableau_view_4]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau_view_1 (Covid_Portfolio_Project)' name='federated.02blw341a03z6v19x6apk1btw7uj' />
          </datasources>
          <datasource-dependencies datasource='federated.02blw341a03z6v19x6apk1btw7uj'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02blw341a03z6v19x6apk1btw7uj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02blw341a03z6v19x6apk1btw7uj].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02blw341a03z6v19x6apk1btw7uj].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02blw341a03z6v19x6apk1btw7uj].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.02blw341a03z6v19x6apk1btw7uj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.02blw341a03z6v19x6apk1btw7uj].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.02blw341a03z6v19x6apk1btw7uj].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.02blw341a03z6v19x6apk1btw7uj].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.02blw341a03z6v19x6apk1btw7uj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.02blw341a03z6v19x6apk1btw7uj].[:Measure Names]' value='137' />
            <format attr='color' value='#333333' />
            <format attr='text-format' field='[federated.02blw341a03z6v19x6apk1btw7uj].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.02blw341a03z6v19x6apk1btw7uj].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#00ffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.02blw341a03z6v19x6apk1btw7uj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.02blw341a03z6v19x6apk1btw7uj].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5FE077DE-17DE-4656-B486-E827147E17B6}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau_view_2 (Covid_Portfolio_Project)' name='federated.0km4tul00gy0q116isydw0kprevg' />
          </datasources>
          <datasource-dependencies datasource='federated.0km4tul00gy0q116isydw0kprevg'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0km4tul00gy0q116isydw0kprevg].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0km4tul00gy0q116isydw0kprevg].[none:location:nk]' value='115' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0km4tul00gy0q116isydw0kprevg].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0km4tul00gy0q116isydw0kprevg].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0km4tul00gy0q116isydw0kprevg].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{5B16178C-57EF-4904-80A6-3461C6307455}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau_view_3 (Covid_Portfolio_Project)' name='federated.1e1c62p1rl57j715m8tt012x0kx4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1e1c62p1rl57j715m8tt012x0kx4'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1e1c62p1rl57j715m8tt012x0kx4].[Longitude (generated)]' field-type='quantitative' max='27749654.280096065' min='-17009982.680948429' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1e1c62p1rl57j715m8tt012x0kx4].[Latitude (generated)]' field-type='quantitative' max='17617189.645514727' min='-8198685.1073822612' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1e1c62p1rl57j715m8tt012x0kx4].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1e1c62p1rl57j715m8tt012x0kx4].[none:Location:nk]' />
              <color column='[federated.1e1c62p1rl57j715m8tt012x0kx4].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1e1c62p1rl57j715m8tt012x0kx4].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1e1c62p1rl57j715m8tt012x0kx4].[Latitude (generated)]</rows>
        <cols>[federated.1e1c62p1rl57j715m8tt012x0kx4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{983F2087-5E2F-424E-ADFE-4C628E07E95D}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Infected in Major Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau_view_4 (Covid_Portfolio_Project)' name='federated.09tb6t50w52c941a6np5e0r2pddf' />
          </datasources>
          <datasource-dependencies datasource='federated.09tb6t50w52c941a6np5e0r2pddf'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09tb6t50w52c941a6np5e0r2pddf].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.09tb6t50w52c941a6np5e0r2pddf].[sum:PercentPopulationInfected:qk]' included-values='non-null' />
          <slices>
            <column>[federated.09tb6t50w52c941a6np5e0r2pddf].[sum:PercentPopulationInfected:qk]</column>
            <column>[federated.09tb6t50w52c941a6np5e0r2pddf].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.09tb6t50w52c941a6np5e0r2pddf].[none:Location:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09tb6t50w52c941a6np5e0r2pddf].[none:Location:nk]' />
              <text column='[federated.09tb6t50w52c941a6np5e0r2pddf].[none:Location:nk]' />
              <text column='[federated.09tb6t50w52c941a6np5e0r2pddf].[sum:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09tb6t50w52c941a6np5e0r2pddf].[sum:PercentPopulationInfected:qk]</rows>
        <cols>[federated.09tb6t50w52c941a6np5e0r2pddf].[tmn:date:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.09tb6t50w52c941a6np5e0r2pddf].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.09tb6t50w52c941a6np5e0r2pddf].[sum:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.09tb6t50w52c941a6np5e0r2pddf].[none:Location:nk]</field>
                  <field>[federated.09tb6t50w52c941a6np5e0r2pddf].[sum:PercentPopulationInfected:qk]</field>
                  <field>[federated.09tb6t50w52c941a6np5e0r2pddf].[tmn:date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United Kingdom&quot;</value>
                <value>960.0298558993735</value>
                <value>#2024-05-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{7F1E7EAA-F2EB-47E2-8F32-7E01C1BF56BE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='99048' x='476' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='89536' x='476' y='940'>
              <zone h='47121' id='3' name='Sheet 4' w='89536' x='476' y='51939'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50999' id='9' name='Sheet 3' w='48335' x='41677' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24530' id='11' name='Sheet 1' w='41201' x='476' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26469' id='12' name='Sheet 2' w='41201' x='476' y='25470'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9512' x='90012' y='940'>
              <zone h='8578' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.1e1c62p1rl57j715m8tt012x0kx4].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9512' x='90012' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='313' h='37720' id='13' is-fixed='true' name='Sheet 2' pane-specification-id='0' param='[federated.0km4tul00gy0q116isydw0kprevg].[none:location:nk]' type-v2='color' w='9512' x='90012' y='9518'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='425' h='50881' id='8' is-fixed='true' name='Sheet 4' pane-specification-id='0' param='[federated.09tb6t50w52c941a6np5e0r2pddf].[none:Location:nk]' type-v2='color' w='9512' x='90012' y='47238'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='16' param='vert' type-v2='layout-flow' w='99048' x='476' y='940'>
                <zone fixed-size='188' h='24530' id='11' is-fixed='true' name='Sheet 1' w='41201' x='476' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50999' id='9' is-fixed='true' name='Sheet 3' w='48335' x='41677' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.1e1c62p1rl57j715m8tt012x0kx4].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9512' x='90012' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='204' h='26469' id='12' is-fixed='true' name='Sheet 2' w='41201' x='476' y='25470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='313' h='37720' id='13' name='Sheet 2' pane-specification-id='0' param='[federated.0km4tul00gy0q116isydw0kprevg].[none:location:nk]' type-v2='color' w='9512' x='90012' y='9518'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47121' id='3' is-fixed='true' name='Sheet 4' w='89536' x='476' y='51939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='425' h='50881' id='8' name='Sheet 4' pane-specification-id='0' param='[federated.09tb6t50w52c941a6np5e0r2pddf].[none:Location:nk]' type-v2='color' w='9512' x='90012' y='47238'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8EBDCEB3-207D-47B6-A334-6F3AE6A2D389}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02blw341a03z6v19x6apk1btw7uj].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BFB673F1-0743-45EE-AFB2-42885BA14335}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0km4tul00gy0q116isydw0kprevg].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0km4tul00gy0q116isydw0kprevg].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17446D56-35C9-4082-8085-365298EE7F20}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1e1c62p1rl57j715m8tt012x0kx4].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e1c62p1rl57j715m8tt012x0kx4].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{BB8B4963-4902-4343-917B-873C33A9D846}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='162'>
            <card param='[federated.09tb6t50w52c941a6np5e0r2pddf].[none:Location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.09tb6t50w52c941a6np5e0r2pddf].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09tb6t50w52c941a6np5e0r2pddf].[none:Location:nk]</field>
            <field>[federated.09tb6t50w52c941a6np5e0r2pddf].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6787683B-9B11-4ED5-B2C7-666574DF6358}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0km4tul00gy0q116isydw0kprevg].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09tb6t50w52c941a6np5e0r2pddf].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{BC4868AE-4AE8-4F38-B0F4-97D777133CD7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      OoqmadRqNfr7+wkEAoyOjpJIJJienmZ5eZlSqbQx3mBsbIxCocDU1BS1Wo2LFy8CbFyPqqqM
      jo6yurpKb2/vY79WH5Zarcbo6OjG797eXjzPo1qtMjQ0hKZpW+LHduaeN4CUElVVicVilEol
      BgYG8DyPubk5dF1namqK4eFhZmdniUajrKysUCqVSKfT2LZNf38/165dY3BwkNnZWRKJBGtr
      a8Tj8bu+l8tlOjo6uH79OiMjI6ysrKCq6kZWpRX1ep3+/n7m5ubo7u5mfn6eWCxGPp+nXC4z
      PDxMLBbDsiyuX79OOp1mcnKS0dFR4vE4q6ur9PX1UavVEEJQLpeJxWLMzMywf/9+ZmZmiEQi
      9/WhXfT19W34WC6XEULgui7Dw8MsLS3RaDTo6+vbEl+2KxuFYCkl165de+AJjuMQeEDDzcMc
      04parUY+n2d4ePixwpBS4rruN/Yjl2t2106n09/o/HbS19e35YXx54G21gL5+DxvtEMAfmc4
      n22NLwCfbY0vAJ9tjS8An22NLwCfbY0vAJ9tjS8An22NLwCfbY0vAJ9tjS8An22NLwCfbY0v
      AJ9tjS8An22NLwCfbY0vAJ9tjS8An22NLwCfbY0vAJ9tjS8An22NLwCfbY0vAJ9tjS8An22N
      LwCfbY0vAJ9tjS8An22NLwCfbY0vAJ9tjS8An22NLwCfbY0vAJ9tjS8An23NbQFIyY2pSS5f
      vszly5fJFioPaUIwM317dcnFuWmuXJ2g2rAfyZGZmen77l/PLHP58mWW13I8zIIGdqPKxMQE
      ddN5aB8K2Syuv1zCtuKuN8DA0CjzFy+S3rmTVPzuZYKs4hy//OzKJiYEExO3V5b57PPTjI0M
      8sWvfsZ89v4iOvfbD8hUmhF0YmLivsd+/vEn9I/upDB/mfPXlu57rF3N8Ytff8Hg0CDlcum+
      x5YXLvDJlaY9q2E+lLhu4/Hez37xSGf4PFvcXiNMUTBCIQKBAKFwGF16fPDeT0l0dGJKg4Fw
      hanJLMN9SWK6zeJKjuVcid/70Zt3GVQ1nUg0zutvvs7PfnuWajpM0ZYUC1W+/+7rXDp/nlql
      RKx3BzM3ZliXcY4c2k8hu8LZs2dYXM3zxvFxProwy0BPJ0eOHCOgNf0LhcMMD/VzdqnCx796
      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
    </thumbnail>
    <thumbnail height='45' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
